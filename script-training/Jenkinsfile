pipeline{
    agent any
    tools{
        maven 'M2_HOME'
    }
    
    
    stages{
    
    // stage("Sonarqube scan"){
      // steps{withSonarQubeEnv(credentialsId: 'sonarqube_ID', installationName: 'Sonarqube') {
        //    sh ''' sonar/bin/sonar-scanner -Dsonar.projectName=geoapp -Dsonar.projectKey=geoapp \
          //         -Dsonar.java.binaries=. '''
            //       }
       // }
   // }
        stage("maven"){
            steps{
            sh 'mvn clean'
            sh 'mvn validate'
            sh 'mvn compile'
            sh 'mvn install'
            sh 'mvn test'   
            sh 'mvn package'         
            }

        }

        stage("Upload artifact to JFrog"){
            steps{
                sh 'curl -uadmin:AP8gcgmmset5jeYChTJYDN6XmDd -T \
                target/bio*.jar \
                "http://ec2-54-167-127-179.compute-1.amazonaws.com:8081/artifactory/geosolution/geo/bio_${BUILD_ID}.jar"'
            }
        }

        stage('Docker login'){
            steps{
                sh 'aws ecr get-login-password --region us-east-1 \
                | docker login --username AWS --password-stdin 211125431540.dkr.ecr.us-east-1.amazonaws.com'
            }
        }
    }
}